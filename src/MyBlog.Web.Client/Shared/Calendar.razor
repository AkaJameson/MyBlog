<div class="calendar-container">
    <div class="calendar-header">
        <button class="nav-btn" @onclick="PrevMonth">&lt;</button>
        <h3>@CurrentMonth.ToString("yyyy年MM月")</h3>
        <button class="nav-btn" @onclick="NextMonth">&gt;</button>
    </div>

    <div class="calendar-weekdays">
        <div>日</div>
        <div>一</div>
        <div>二</div>
        <div>三</div>
        <div>四</div>
        <div>五</div>
        <div>六</div>
    </div>

    <div class="calendar-grid">
        @foreach (var day in Days)
        {
            <div class="calendar-day @(day.IsToday ? "today" : "") @(day.IsCurrentMonth ? "" : "other-month")">
                @day.Day
            </div>
        }
    </div>
</div>
<style>
    .calendar-container {
        background: white;
        border-radius: 10px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
        padding: 15px;
        transition: all 0.3s ease;
    }

        .calendar-container:hover {
            box-shadow: 0 6px 16px rgba(0, 0, 0, 0.12);
        }

    .calendar-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 15px;
    }

        .calendar-header h3 {
            margin: 0;
            font-size: 1.2rem;
            color: #4361ee;
            font-weight: 500;
        }

    .nav-btn {
        background: none;
        border: none;
        font-size: 1.2rem;
        cursor: pointer;
        color: #6c757d;
        width: 30px;
        height: 30px;
        border-radius: 50%;
        transition: all 0.2s;
    }

        .nav-btn:hover {
            background-color: #f0f2f5;
            color: #4361ee;
        }

    .calendar-weekdays {
        display: grid;
        grid-template-columns: repeat(7, 1fr);
        text-align: center;
        font-weight: 500;
        margin-bottom: 10px;
        color: #6c757d;
        font-size: 0.9rem;
    }

    .calendar-grid {
        display: grid;
        grid-template-columns: repeat(7, 1fr);
        gap: 5px;
    }

    .calendar-day {
        height: 30px;
        display: flex;
        align-items: center;
        justify-content: center;
        border-radius: 50%;
        font-size: 0.9rem;
        cursor: pointer;
        transition: all 0.2s;
    }

        .calendar-day:hover {
            background-color: #e9ecef;
        }

    .other-month {
        color: #ced4da;
    }

    .today {
        background-color: #4361ee;
        color: white;
        font-weight: bold;
    }

</style>
@code {
    private DateTime CurrentMonth = DateTime.Today;
    private List<CalendarDay> Days = new();

    protected override void OnInitialized()
    {
        GenerateCalendar();
    }

    private void GenerateCalendar()
    {
        Days.Clear();

        var firstDay = new DateTime(CurrentMonth.Year, CurrentMonth.Month, 1);
        var lastDay = firstDay.AddMonths(1).AddDays(-1);

        // 填充前月空白
        int startDay = (int)firstDay.DayOfWeek;
        for (int i = 0; i < startDay; i++)
        {
            var prevDay = firstDay.AddDays(-(startDay - i));
            Days.Add(new CalendarDay
                {
                    Day = prevDay.Day,
                    IsCurrentMonth = false
                });
        }

        // 当月日期
        for (int i = 1; i <= lastDay.Day; i++)
        {
            var date = new DateTime(CurrentMonth.Year, CurrentMonth.Month, i);
            Days.Add(new CalendarDay
                {
                    Day = i,
                    IsCurrentMonth = true,
                    IsToday = date.Date == DateTime.Today
                });
        }
    }

    private void PrevMonth()
    {
        CurrentMonth = CurrentMonth.AddMonths(-1);
        GenerateCalendar();
    }

    private void NextMonth()
    {
        CurrentMonth = CurrentMonth.AddMonths(1);
        GenerateCalendar();
    }

    private class CalendarDay
    {
        public int Day { get; set; }
        public bool IsCurrentMonth { get; set; }
        public bool IsToday { get; set; }
    }
}
